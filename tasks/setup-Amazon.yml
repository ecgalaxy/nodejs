---
- name: Set Node.js release
  ansible.builtin.set_fact:
    nodejs_release: "18.20.7"
    nodejs_checksum: "sha256:ef954ff6e8dffd7260e9e96398cb5623f0e3e0b769dee409a3906b557c06a26a"
  when: nodejs_version_major | int == 18

- name: Set Node.js release
  ansible.builtin.set_fact:
    nodejs_release: "20.19.0"
    nodejs_checksum: "sha256:14e5c5daa2fa8d1ac9275130e3f4aeaa5f44d939af9b699865db82ae5239d324"
  when: nodejs_version_major | int == 20

- name: Set Node.js release
  ansible.builtin.set_fact:
    nodejs_release: "22.14.0"
    nodejs_checksum: "sha256:00f3430441a85886510f34a0fce5b387a77942978cdd8f2c046cc7799fb2226c"
  when: nodejs_version_major | int == 22

- name: Set Node.js release
  ansible.builtin.set_fact:
    nodejs_release: "23.6.1"
    nodejs_checksum: "sha256:594450a2fb2896adf76dfcc06ef7e6637ed08f000b9290f4c175dee2fe2384a8"
  when: nodejs_version_major | int == 23

- name: Set artifact download URL
  ansible.builtin.set_fact:
    nodejs_download_url: "https://code.europa.eu/api/v4/projects/569/packages/generic/amazonlinux2-nodejs/{{ nodejs_release }}/nodejs-v{{ nodejs_release }}.tar.gz"
    nodejs_install_path: "/opt/nodejs/{{ nodejs_release }}"

- name: Check if Node.js {{ nodejs_version_major }} is already installed # noqa: name[template]
  ansible.builtin.stat:
    path: "{{ nodejs_install_path }}"
  register: nodejs_st

- name: Install Node.js
  when: nodejs_st.stat.isdir is not defined
  block:
  - name: Create directory
    ansible.builtin.file:
      state: directory
      owner: root
      group: root
      mode: 'u=rwx,go=rx'
      path: "{{ nodejs_install_path }}"
    become: true

  - name: Download Node.js artifact
    ansible.builtin.get_url:
      url: "{{ nodejs_download_url }}"
      checksum: "{{ nodejs_checksum }}"
      mode: 'u=rwx,go=rx'
      dest: /tmp
    register: downloaded_file

  - name: Extract artifact
    ansible.builtin.unarchive:
      src: "{{ downloaded_file.dest }}"
      dest: "{{ nodejs_install_path }}"
      owner: "root"
      group: "root"
      mode: "u=rwx,go=rx"
      remote_src: yes
      extra_opts: [--strip-components=3]
    become: true

  - name: Create node symlink
    ansible.builtin.file:
      src: "{{ nodejs_install_path }}/bin/node"
      dest: /usr/local/bin/node
      owner: "root"
      group: "root"
      mode: 'u=rwx,go=rx'
      state: link
    become: true

  - name: Create npm symlink
    ansible.builtin.file:
      src: "{{ nodejs_install_path }}/bin/npm"
      dest: /usr/local/bin/npm
      owner: "root"
      group: "root"
      mode: 'u=rwx,go=rx'
      state: link
    become: true

  - name: Create npx symlink
    ansible.builtin.file:
      src: "{{ nodejs_install_path }}/bin/npx"
      dest: /usr/local/bin/npx
      owner: "root"
      group: "root"
      mode: 'u=rwx,go=rx'
      state: link
    become: true

  - name: Create corepack symlink
    ansible.builtin.file:
      src: "{{ nodejs_install_path }}/bin/corepack"
      dest: /usr/local/bin/corepack
      owner: "root"
      group: "root"
      mode: 'u=rwx,go=rx'
      state: link
    become: true

  - name: Clean up temporary files
    ansible.builtin.file:
      path: "{{ downloaded_file.dest }}"
      state: absent

- name: Install yarn
  community.general.npm:
    name: yarn
    global: true
    executable: /usr/local/bin/npm
  environment:
    PATH: /usr/local/bin:{{ ansible_env.PATH }}
  become: true

- name: Create yarn symlink
  ansible.builtin.file:
    src: "{{ nodejs_install_path }}/bin/yarn"
    dest: /usr/local/bin/yarn
    owner: "root"
    group: "root"
    mode: 'u=rwx,go=rx'
    state: link
  become: true
